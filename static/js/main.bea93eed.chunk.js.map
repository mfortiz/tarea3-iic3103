{"version":3,"sources":["avion.svg","chat.js","info.js","Mapa.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","socket","io","path","Chat","name","obtenerFecha","hoy","Date","length","dia","String","getDate","padStart","mes","getMonth","ano","getFullYear","hora","getHours","minutos","getMinutes","segundos","getSeconds","useState","message","setMessage","messages","setMessages","useEffect","on","obj","off","divRef","useRef","current","scrollIntoView","behavior","className","map","e","i","key","date","ref","onSubmit","preventDefault","emit","value","placeholder","onChange","target","align","InfoVuelos","destinos","detdestinos","vuelos","detvuelos","obtenerVuelos","detobtenerVuelos","objeto","forEach","elemento","ant","origin","destination","code","id","latitud","toPrecision","origenLatitud","longitud","origenLongitud","airline","plane","seats","passengers","passenger","idx","toString","age","planeIcon","Icon","iconUrl","iconSize","MapaGlobal","trayectorias","detTrayectorias","position","Map","center","zoom","style","height","TileLayer","attribution","url","CircleMarker","color","radius","Marker","icon","Popup","Polyline","positions","Boolean","window","location","hostname","match","ReactDOM","render","React","setName","registered","setRegistered","sx","flexDirection","minHeight","flex","minWidth","Mapa","flexBasis","order","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bea93eed.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avion.4dc849bc.svg\";","import React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport { io } from 'socket.io-client';\n\nlet socket = io(\"wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl\", {path: '/flights'});\n\nconst Chat = ({ name }) => {\n\n  const obtenerFecha = (...args) => {\n    var hoy = new Date();\n    if (args.length > 0) {\n      hoy = new Date(args[0]);\n    }\n    var dia = String(hoy.getDate()).padStart(2, '0');\n    var mes = String(hoy.getMonth() + 1).padStart(2, '0'); \n    var ano = hoy.getFullYear();\n    var hora = String(hoy.getHours()).padStart(2, '0');\n    var minutos = String(hoy.getMinutes()).padStart(2, '0');\n    var segundos = String(hoy.getSeconds()).padStart(2, '0');\n\n    hoy = dia + '/' + mes + '/' + ano + ' - ' + hora + ':' + minutos + ':' + segundos;\n    return hoy;\n  }\n\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    socket.on(\"CHAT\", (obj) => {\n      setMessages([...messages, obj]);\n    });\n\n    return () => {\n      socket.off();\n    };\n  }, [messages]);\n\n  const divRef = useRef(null);\n  useEffect(() => {\n    divRef.current.scrollIntoView({ behavior: \"smooth\" });\n  });\n\n  const submit = (e) => {\n    e.preventDefault();\n    const obj = {\n      \"name\": name, \n      \"message\": message, \n      \"date\": obtenerFecha()\n    }\n    socket.emit(\"CHAT\", obj);\n    setMessage(\"\");\n  };\n\n  return (\n    <div className=\"contenedorChat\">\n      <div className=\"chat\">\n        {messages.map((e, i) => (\n          <div key={i}>\n            <div><b>{e.name} </b>({obtenerFecha(e.date)}): </div>\n            <div>{e.message}</div>\n\n          </div>\n        ))}\n        <div ref={divRef}></div>\n      </div>\n      <form onSubmit={submit}>\n        <br></br>\n        <textarea\n          className=\"mensaje\"\n          value={message}\n          placeholder=\"Mensaje\"\n          onChange={(e) => {\n            setMessage(e.target.value)\n          }}\n        ></textarea>\n        <br></br>\n        <button align=\"center\">Enviar mensaje</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Chat;","import React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport { io } from 'socket.io-client';\r\n\r\nlet socket = io(\"wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl\", {path: '/flights'});\r\n\r\n\r\nconst InfoVuelos = () => {\r\n\r\n    const [destinos, detdestinos] = useState([]);\r\n    const [vuelos, detvuelos] = useState([]);\r\n    const [obtenerVuelos, detobtenerVuelos] = useState(false);\r\n  \r\n    socket.emit(\"FLIGHTS\");\r\n    useEffect(() => {\r\n      socket.on(\"FLIGHTS\", (objeto) => {\r\n        if (!obtenerVuelos) {\r\n          objeto.forEach(elemento => {\r\n            detdestinos(ant => [...ant, [elemento.origin, elemento.destination, elemento.code]]);\r\n            detvuelos(ant => [...ant, elemento]);\r\n          });\r\n          detobtenerVuelos(true);\r\n        };\r\n      });\r\n  \r\n      return () => {\r\n        socket.off();\r\n      }\r\n    });\r\n  \r\n  \r\n    const origenLatitud = (code) => {\r\n      let latitud;\r\n      destinos.forEach(elemento => {\r\n        if (elemento[2] === code) {\r\n          latitud = elemento[0][0].toPrecision(6);\r\n        };\r\n      });\r\n      return latitud;\r\n    };\r\n  \r\n    const origenLongitud = (code) => {\r\n      let longitud;\r\n      destinos.forEach(elemento => {\r\n        if (elemento[2] === code) {\r\n          longitud = elemento[0][1].toPrecision(6);\r\n        };\r\n      });\r\n      return longitud;\r\n    };\r\n  \r\n    return (\r\n      <div id=\"idmapa\">\r\n        <div className=\"vuelos\">\r\n          {vuelos.map(elemento => {\r\n            return (\r\n              <div className=\"vuelosInfo\">\r\n                <h3>Vuelo {elemento.code}</h3>\r\n                <b>Origen:</b> ({origenLatitud(elemento.code)}, {origenLongitud(elemento.code)})<br/>\r\n                <b>Destino:</b> ({elemento.destination[0].toPrecision(6)}, {elemento.destination[1].toPrecision(6)})<br/>\r\n                <b>Aerolínea:</b> {elemento.airline}<br/>\r\n                <b>Avión:</b> {elemento.plane}<br/>\r\n                <b>Nº de asientos:</b> {elemento.seats}<br/>\r\n                <b>Pasajeros: </b> {elemento.passengers.map((passenger, idx) => (\r\n                  <ul id=\"ulId\" key={idx.toString()}>• {passenger.name} ({passenger.age} años)</ul>\r\n                ))}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default InfoVuelos;","import React, { useEffect, useState } from 'react';\r\nimport { Map, TileLayer, Marker, Polyline, CircleMarker, Popup } from 'react-leaflet';\r\nimport './App.css';\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport { Icon } from 'leaflet';\r\nimport { io } from 'socket.io-client';\r\nimport plane from './avion.svg';\r\n\r\nlet socket = io(\"wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl\", {path: '/flights'});\r\n\r\n\r\nconst planeIcon = new Icon({\r\n    iconUrl: plane,\r\n    iconSize: [25, 25]\r\n  });\r\n\r\n\r\nconst MapaGlobal = () => {\r\n\r\n    const [destinos, detdestinos] = useState([]);\r\n    const [vuelos, detvuelos] = useState([]);\r\n    const [trayectorias, detTrayectorias] = useState([]);\r\n    const [obtenerVuelos, detobtenerVuelos] = useState(false);\r\n  \r\n    socket.emit(\"FLIGHTS\");\r\n    useEffect(() => {\r\n      socket.on(\"FLIGHTS\", (objeto) => {\r\n        if (!obtenerVuelos) {\r\n          objeto.forEach(elemento => {\r\n            detdestinos(ant => [...ant, [elemento.origin, elemento.destination, elemento.code]]);\r\n            detvuelos(ant => [...ant, elemento]);\r\n          });\r\n          detobtenerVuelos(true);\r\n        };\r\n      });\r\n  \r\n      return () => {\r\n        socket.off();\r\n      }\r\n    });\r\n  \r\n    useEffect(() => {\r\n      socket.on(\"POSITION\", (objeto) => {\r\n        detTrayectorias(ant => ([...ant, objeto]));\r\n        vuelos.forEach(elemento => {\r\n          if (elemento.code === objeto.code) {\r\n            elemento.origin = objeto.position;\r\n            detvuelos(vuelos);\r\n          }\r\n        });\r\n      });\r\n  \r\n      return () => {\r\n        socket.off();\r\n      }\r\n    });\r\n  \r\n\r\n    return (\r\n      <div id=\"idmapa\">\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n\r\n        <Map\r\n        center={[15, 0]}\r\n        zoom={2}\r\n        style={{height: \"60vh\"}}\r\n        >\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        {trayectorias.map(elemento => {\r\n          return (\r\n            <CircleMarker\r\n            center={elemento.position}\r\n            color=\"purple\"\r\n            radius={1}\r\n            />\r\n          );\r\n        })}\r\n        {vuelos.map(elemento => {\r\n          return (\r\n            <Marker position={elemento.origin} icon={planeIcon}>\r\n              <Popup><b>Vuelo:</b> {elemento.code}</Popup>\r\n            </Marker>\r\n          );\r\n        })}\r\n        {destinos.map(elemento => {\r\n          return (\r\n            <CircleMarker center={elemento[0]} color=\"orange\" radius={1.5}/>\r\n          );\r\n        })}\r\n        {destinos.map(elemento => {\r\n          return (\r\n            <CircleMarker center={elemento[1]} color=\"black\" radius={1.5}/>\r\n          );\r\n        })}\r\n        {destinos.map(elemento => {\r\n          return (\r\n            <Polyline positions={[elemento[0], elemento[1]]} />\r\n          );\r\n        })};\r\n        \r\n        \r\n        \r\n      </Map>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default MapaGlobal;","import React, { useState } from \"react\";\r\nimport { Map, Marker, Popup, TileLayer } from \"react-leaflet\";\r\nimport { Icon } from \"leaflet\";\r\n/*import * as parkData from \"./data/skateboard-parks.json\";*/\r\nimport \"./App.css\";\r\nimport { Box, Flex } from 'rebass';\r\nimport Chat from \"./chat.js\";\r\nimport InfoVuelos from \"./info.js\";\r\nimport MapaGlobal from \"./Mapa.js\";\r\n\r\nexport const icon = new Icon({\r\n  iconUrl: \"/avion.svg\",\r\n  iconSize: [25, 25]\r\n});\r\n\r\nexport default function App() {\r\n  const [activePark, setActivePark] = React.useState(null);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [registered, setRegistered] = useState(false);\r\n\r\n  const register = (e) => {\r\n    e.preventDefault();\r\n    if (name !== \"\") {\r\n      setRegistered(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n    sx={{\r\n      flexDirection: 'column',\r\n      minHeight: '100vh'\r\n    }}>\r\n    <Flex\r\n      sx={{\r\n        flex: 1,\r\n        flexDirection: [\r\n          'column',\r\n          'row'\r\n        ]\r\n      }}>\r\n      <Box\r\n        sx={{\r\n          flex: 1,\r\n          minWidth: 0\r\n        }}>\r\n        <br></br>\r\n        <h1 align=\"center\">Mapa \"en vivo\"</h1>\r\n        <MapaGlobal></MapaGlobal>\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          flexBasis: [\r\n            'auto',\r\n            300\r\n          ],\r\n          order: -1\r\n        }}>\r\n         \r\n        {<div className=\"render-chat\">\r\n\t\t\t\t<h1 align=\"center\">Información</h1>\r\n        <InfoVuelos></InfoVuelos>\r\n\t\t\t  </div>}\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          flexBasis: [\r\n            'auto',\r\n            400\r\n          ]\r\n        }}>\r\n        {<div className=\"render-chat\">\r\n\t\t\t\t<h1 align=\"center\">Chat</h1>\r\n        <div className=\"wrapper\">\r\n        {!registered && (\r\n          <form className=\"chatContainer\" onSubmit={register}>\r\n            <label>Usuario</label>\r\n            <br></br>\r\n            <input className=\"inputName\" value={name} onChange={(e) => setName(e.target.value)} />\r\n            <br></br>\r\n            <button>Ir al chat</button>\r\n          </form>\r\n        )}\r\n\r\n        {registered && (\r\n          <Chat name={name} />\r\n        )}\r\n      </div>\r\n\t\t\t  </div>}\r\n      </Box>\r\n    </Flex>\r\n   \r\n  </Flex>\r\n    \r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}